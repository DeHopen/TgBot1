import telebot
from telebot import types
from bs4 import BeautifulSoup as BS
from bs4 import BeautifulSoup
import requests
#DeHopen
TOKEN = '5399153918:AAHH6i48a4LjIxhYsw3876q-m_mkT2V5jgk'
DOLLAR_RUB = 'https://www.google.com/search?sxsrf=ALeKk01NWm6viYijAo3HXYOEQUyDEDtFEw%3A1584716087546&source=hp&ei=N9l0XtDXHs716QTcuaXoAg&q=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&oq=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+&gs_l=psy-ab.3.0.35i39i70i258j0i131l4j0j0i131l4.3044.4178..5294...1.0..0.83.544.7......0....1..gws-wiz.......35i39.5QL6Ev1Kfk4'
EVRO_RUB = 'https://www.google.com/search?q=–µ–≤—Ä–æ+–∫+—Ä—É–±–ª—é&sxsrf=ALiCzsZfpTDUjvoPF2rtg4CfBh6o8vkAyQ%3A1651997130857&ei=ynl3YtqCNIX6rgS_8rSYDw&oq=–¥–æ–ª–ª–∞—Ä+–∫+—Ä—É–±–ª—é&gs_lcp=Cgdnd3Mtd2l6EAEYATIHCCMQsAMQJzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIKCAAQRxCwAxDJAzIHCAAQRxCwAzIHCAAQsAMQQ0oECEEYAEoECEYYAFAAWABgtiBoAnABeACAAQCIAQCSAQCYAQDIAQrAAQE&sclient=gws-wiz'
CNY_RUB = 'https://www.google.com/search?q=—é–∞–Ω—å+–∫+—Ä—É–±–ª—é&sxsrf=ALiCzsYz1qzZADOrMP4Dv1kSQ8cnb45VTw%3A1651997140136&ei=1Hl3Yp6DCKOsrgTAkKSQCQ&oq=—é+–∫+—Ä—É–±–ª—é&gs_lcp=Cgdnd3Mtd2l6EAEYADIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeOgcIIxCwAxAnOgcIABBHELADOgoIABBHELADEMkDOgcIABCwAxBDOgcIIxCxAhAnOgcIIxCwAhAnOgQIABANOggIABAHEAoQHjoHCAAQsQMQQ0oECEEYAEoECEYYAFCyBVi_N2DISGgCcAF4AIABXYgBkgSSAQE2mAEAoAEByAEKwAEB&sclient=gws-wiz'
headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}
NY = 'https://time100.ru/New-York'
MSK = 'https://time100.ru/Moscow'
KEM = 'https://time100.ru/kemerovo'
WK = 'https://rusmeteo.net/weather/kemerovo/'
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    item2 = types.KeyboardButton('‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞')
    item3 = types.KeyboardButton('üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è')
    item4 = types.KeyboardButton('üìã–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–∞–º—ã–π –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç –≤ Telegram! –°–µ–≥–æ–¥–Ω—è –≤ –º–µ–Ω—é –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã, —Ü–µ–Ω—ã –≤–∞–ª—é—Ç –Ω–∞ —É–ø–∞–≤—à–∏—Ö –±–∏—Ä–∂–∞—Ö –∏ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –≤—ã –µ–≥–æ –Ω–µ –≤–∏–¥–∏—Ç–µ —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É. –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É\n\n –∑–∞–µ–±–∏—Å—å –ò–≤–∞–Ω—ã—á, –æ—Å—Ç–∞–≤–ª—è–µ–º\n'.format(message.from_user), reply_markup = markup)
    bot.send_message(message.chat.id, '–Ω–æ –ª—É—á—à–µ –µ–≥–æ —É–±—Ä–∞—Ç—å, –≤—Å–µ –∂–µ –ø—Ä–µ–ø–æ–¥—É —Ç–∞–∫–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å.....', reply_markup=markup)
@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üíµ–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞')
            item2 = types.KeyboardButton('üíµ–ö—É—Ä—Å –ï–≤—Ä–æ')
            item3 = types.KeyboardButton('üíµ–ö—É—Ä—Å –Æ–∞–Ω—å')
            back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)
            bot.send_message(message.chat.id, 'üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç', reply_markup=markup)
        elif message.text == 'üîô–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
            item2 = types.KeyboardButton('‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞')
            item3 = types.KeyboardButton('üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–ù–∞–∑–∞–¥', reply_markup=markup)
        elif message.text == 'üíµ–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞':
            dollar(message)
        elif message.text == 'üíµ–ö—É—Ä—Å –ï–≤—Ä–æ':
            evro(message)
        elif message.text == 'üíµ–ö—É—Ä—Å –Æ–∞–Ω—å':
            cny(message)
        elif message.text == 'üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–ù—å—é-–ô–æ—Ä–∫')
            item2 = types.KeyboardButton('–ú–æ—Å–∫–≤–∞')
            item3 = types.KeyboardButton('–ö–µ–º–µ—Ä–æ–≤–æ')
            back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)
            bot.send_message(message.chat.id, 'üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è', reply_markup=markup)
        elif message.text == '–ù—å—é-–ô–æ—Ä–∫':
            full_page = requests.get(NY, headers=headers)
            html = BS(full_page.content, 'html.parser')
            convert = html.findAll("span", {"class": "time", "data-tz": "America/New_York", 'data-format': '%H:%i:%s'})
            con = html.findAll("span", {"class": "time", "data-tz": "America/New_York", 'data-format': '%d %F %Y –≥–æ–¥–∞, %l'})
            bot.send_message(message.chat.id, '–í –ù—å—é-–ô–æ—Ä–∫–µ ' + con[0].text + '\n' +'–í—Ä–µ–º—è: ' + convert[0].text)
        elif message.text == '–ú–æ—Å–∫–≤–∞':
            full_page = requests.get(MSK, headers=headers)
            html = BS(full_page.content, 'html.parser')
            convert = html.findAll("span", {"class": "time", "data-tz": "Europe/Moscow", 'data-format': '%H:%i:%s'})
            con = html.findAll("span", {"class": "time", "data-tz": "Europe/Moscow", 'data-format': '%d %F %Y –≥–æ–¥–∞, %l'})
            bot.send_message(message.chat.id, '–í –ú–æ—Å–∫–≤–µ ' + con[0].text + '\n' +'–í—Ä–µ–º—è: ' + convert[0].text)
        elif message.text == '–ö–µ–º–µ—Ä–æ–≤–æ':
            full_page = requests.get(KEM, headers=headers)
            html = BS(full_page.content, 'html.parser')
            convert = html.findAll("span", {"class": "time", "data-tz": "Asia/Krasnoyarsk", 'data-format': '%H:%i:%s'})
            con = html.findAll("span", {"class": "time", "data-tz": "Asia/Krasnoyarsk", 'data-format': '%d %F %Y –≥–æ–¥–∞, %l'})
            bot.send_message(message.chat.id, '–í –ö–µ–º–µ—Ä–æ–≤–æ ' + con[0].text + '\n' +'–í—Ä–µ–º—è: ' + convert[0].text)
        elif message.text == '‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞':
            full_page = requests.get(WK, headers=headers)
            html = BS(full_page.content, 'html.parser')
            convert = html.findAll("div", {"class": "weather-text"})
            bot.send_message(message.chat.id, convert[0].text)
        elif message.text == 'üìã–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
            lesson(message)

def city(message):
    if message.text:
        weather(message)
def dollar(message):
    full_page = requests.get(DOLLAR_RUB, headers=headers)
    soup = BeautifulSoup(full_page.content, 'html.parser')
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 –¥–æ–ª–ª–∞—Ä = " + convert[0].text + '\n–ù–∞–ø–∏—Å–∞–≤ —Å—é–¥–∞ 0 –≤—ã –±—ã –¥–∞–∂–µ –Ω–µ —É–¥–∏–≤–∏–ª–∏—Å—å')
def evro(message):
    full_page = requests.get(EVRO_RUB, headers=headers)
    soup = BeautifulSoup(full_page.content, 'html.parser')
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 –µ–≤—Ä–æ = " + convert[0].text + '\n–î–∞ –Ω–µ —Å—Å—ã —Å–∫–æ—Ä–æ —Ä—É–±–ª—å –±—É–¥–µ—Ç –¥–æ—Ä–æ–∂–µ –µ–≤—Ä–æ')
def cny(message):
    full_page = requests.get(CNY_RUB, headers=headers)
    soup = BeautifulSoup(full_page.content, 'html.parser')
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 —é–∞–Ω—å = " + convert[0].text + '\n–ù–∞ –≤–∞—à–µ–º –º–µ—Å—Ç–µ —è –±—ã –∑–∞–∫—É–ø–∏–ª –ø–∞—Ä—É —à—Ç—É–∫')
def lesson(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", url='https://kemsu-schedule.web.app/')
    markup.add(button1)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º".format(message.from_user), reply_markup=markup)
if __name__ == '__main__':
    bot.polling(none_stop=True)
