import telebot
from telebot import types
import config
import requests
from bs4 import BeautifulSoup as BS
from bs4 import BeautifulSoup
import datetime
import requests

TOKEN = '5259764164:AAHPIBY6gK5zsrNRCUgpb6KEIqSf91XR8_g'
DOLLAR_RUB = 'https://www.google.com/search?sxsrf=ALeKk01NWm6viYijAo3HXYOEQUyDEDtFEw%3A1584716087546&source=hp&ei=N9l0XtDXHs716QTcuaXoAg&q=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&oq=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+&gs_l=psy-ab.3.0.35i39i70i258j0i131l4j0j0i131l4.3044.4178..5294...1.0..0.83.544.7......0....1..gws-wiz.......35i39.5QL6Ev1Kfk4'
EVRO_RUB = 'https://www.google.com/search?q=–µ–≤—Ä–æ+–∫+—Ä—É–±–ª—é&sxsrf=ALiCzsZfpTDUjvoPF2rtg4CfBh6o8vkAyQ%3A1651997130857&ei=ynl3YtqCNIX6rgS_8rSYDw&oq=–¥–æ–ª–ª–∞—Ä+–∫+—Ä—É–±–ª—é&gs_lcp=Cgdnd3Mtd2l6EAEYATIHCCMQsAMQJzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIHCAAQRxCwAzIKCAAQRxCwAxDJAzIHCAAQRxCwAzIHCAAQsAMQQ0oECEEYAEoECEYYAFAAWABgtiBoAnABeACAAQCIAQCSAQCYAQDIAQrAAQE&sclient=gws-wiz'
CNY_RUB = 'https://www.google.com/search?q=—é–∞–Ω—å+–∫+—Ä—É–±–ª—é&sxsrf=ALiCzsYz1qzZADOrMP4Dv1kSQ8cnb45VTw%3A1651997140136&ei=1Hl3Yp6DCKOsrgTAkKSQCQ&oq=—é+–∫+—Ä—É–±–ª—é&gs_lcp=Cgdnd3Mtd2l6EAEYADIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeOgcIIxCwAxAnOgcIABBHELADOgoIABBHELADEMkDOgcIABCwAxBDOgcIIxCxAhAnOgcIIxCwAhAnOgQIABANOggIABAHEAoQHjoHCAAQsQMQQ0oECEEYAEoECEYYAFCyBVi_N2DISGgCcAF4AIABXYgBkgSSAQE2mAEAoAEByAEKwAEB&sclient=gws-wiz'
headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}
bot = telebot.TeleBot(TOKEN)
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    item2 = types.KeyboardButton('‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞')
    item3 = types.KeyboardButton('üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è')
    markup.add(item1, item2, item3)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!'.format(message.from_user), reply_markup = markup)

@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üí≤–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞')
            item2 = types.KeyboardButton('üí≤–ö—É—Ä—Å –ï–≤—Ä–æ')
            item3 = types.KeyboardButton('üí≤–ö—É—Ä—Å –Æ–∞–Ω—å')
            back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)
            bot.send_message(message.chat.id, 'üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç', reply_markup=markup)
        elif message.text == 'üîô–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üìà–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
            item2 = types.KeyboardButton('‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞')
            item3 = types.KeyboardButton('üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–ù–∞–∑–∞–¥', reply_markup=markup)
        elif message.text == '‚òÅ–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞':
            weather(message)
            #markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            #while bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=markup):
                #city(message)
                #break
        elif message.text == 'üìÖ–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            now = datetime.datetime.today()
            bot.send_message(message.chat.id, '–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:\n' + now.strftime("%d-%m-%Y\n%H:%M:%S"), reply_markup=markup)
        elif message.text == 'üí≤–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞':
            dollar(message)
        elif message.text == 'üí≤–ö—É—Ä—Å –ï–≤—Ä–æ':
            evro(message)
        elif message.text == 'üí≤–ö—É—Ä—Å –Æ–∞–Ω—å':
            cny(message)
def city(message):
    if message.text:
        weather(message)
def dollar(message):
    full_page = requests.get(DOLLAR_RUB, headers=headers)
    soup = BeautifulSoup(full_page.content, 'html.parser')
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 –¥–æ–ª–ª–∞—Ä = " + convert[0].text)
def evro(message):
    full_page = requests.get(EVRO_RUB, headers=headers)
    soup = BeautifulSoup(full_page.content, 'html.parser')
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 –µ–≤—Ä–æ = " + convert[0].text)
def cny(message):
    full_page = requests.get(CNY_RUB, headers=headers)

            # –†–∞–∑–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ BeautifulSoup
    soup = BeautifulSoup(full_page.content, 'html.parser')

            # –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–ª—è –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
    convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –∫—É—Ä—Å: 1 —é–∞–Ω—å = " + convert[0].text)
def weather(message):
    r = requests.get(f'https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-–∫–µ–º–µ—Ä–æ–≤–æ')
    html = BS(r.content, 'html.parser')
    for el in html.select('#content'):
        t_min = el.select('.temperature .min')[0].text
        t_max = el.select('.temperature .max')[0].text
        text = el.select('.wDescription .description')[0].text
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n" + t_min + ', ' + t_max + '\n' + text)
    #bot.send_message(message.chat.id, f"https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-{message.text}")

if __name__ == '__main__':
    bot.polling(none_stop=True)
